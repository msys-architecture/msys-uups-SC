{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0xe7563d3c2ed27f9056659baa47a9c4432478a87bbbd409f53afc63ab1284e5eb"
  },
  "proxies": [
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xa38aa92274fe96238848e84289dca63cf294c8a744cb440da0e34e85f02c81e7",
      "kind": "uups"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x59b912ada92bf687995959ae880e1dbb397990ef456e687e7b9fb0ea906a236f",
      "kind": "uups"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x1b7b135f356adddfb90480cb8f25b0a7405f38f3659ff5f050c6e704974f354e",
      "kind": "uups"
    },
    {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x3ade9a49f7ff1f0cef981f8fdbe70e7ff1c69e3313e32752717e57e8877e5fc3",
      "kind": "uups"
    }
  ],
  "impls": {
    "c8eb74863e58b685a7327fc2341c2e4d88415c7d8460d96c42e450b9b66c63e0": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x306d0a1d31d5f9da03ac01ec2820911232ab23b5c6bc4a9b4b51b4b573425c7a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8511345f913122793197c1e04d619ac627ae6c485e6ce561f192056a502ce733": {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x895413389b53505d7fc159e2be17b00ab44cf3eabe987552947896b6a94e9608",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20Upgradeable)903",
            "contract": "BettingContract",
            "src": "contracts/bettingContract.sol:42"
          },
          {
            "label": "matches",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_struct(Match)1348_storage)dyn_storage",
            "contract": "BettingContract",
            "src": "contracts/bettingContract.sol:43"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_struct(User)1366_storage)dyn_storage",
            "contract": "BettingContract",
            "src": "contracts/bettingContract.sol:44"
          },
          {
            "label": "bettingAmountArray",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "BettingContract",
            "src": "contracts/bettingContract.sol:45"
          },
          {
            "label": "userList",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_struct(User)1366_storage)",
            "contract": "BettingContract",
            "src": "contracts/bettingContract.sol:46"
          },
          {
            "label": "participants",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Participant)1355_storage)dyn_storage))",
            "contract": "BettingContract",
            "src": "contracts/bettingContract.sol:47"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "BettingContract",
            "src": "contracts/bettingContract.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Match)1348_storage)dyn_storage": {
            "label": "struct BettingContract.Match[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Participant)1355_storage)dyn_storage": {
            "label": "struct BettingContract.Participant[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(User)1366_storage)dyn_storage": {
            "label": "struct BettingContract.User[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)903": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(User)1366_storage)": {
            "label": "mapping(address => struct BettingContract.User)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Participant)1355_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct BettingContract.Participant[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(Participant)1355_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct BettingContract.Participant[]))",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Match)1348_storage": {
            "label": "struct BettingContract.Match",
            "members": [
              {
                "label": "matchId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "team1",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "team2",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "won",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "statusCode",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "date",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Participant)1355_storage": {
            "label": "struct BettingContract.Participant",
            "members": [
              {
                "label": "participantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "selectedTeam",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(User)1366_storage": {
            "label": "struct BettingContract.User",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "walletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "email",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "disabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6e245f0d42ca48c2000c0bd0e4feb54476d885972fd99ea5b4b5acab3c507a42": {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x8bb70e74cc17a3a51c9d652be05992432ebf13926f41fe371b798dbfe7e15536",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IERC20Upgradeable)903",
            "contract": "LotteryContract",
            "src": "contracts/lotteryContract.sol:45"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_struct(User)1927_storage)dyn_storage",
            "contract": "LotteryContract",
            "src": "contracts/lotteryContract.sol:46"
          },
          {
            "label": "lotteries",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_struct(Lottery)1945_storage)dyn_storage",
            "contract": "LotteryContract",
            "src": "contracts/lotteryContract.sol:47"
          },
          {
            "label": "lotteryAmountArray",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "LotteryContract",
            "src": "contracts/lotteryContract.sol:48"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "LotteryContract",
            "src": "contracts/lotteryContract.sol:49"
          },
          {
            "label": "userList",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_struct(User)1927_storage)",
            "contract": "LotteryContract",
            "src": "contracts/lotteryContract.sol:50"
          },
          {
            "label": "lotteryParticipants",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "LotteryContract",
            "src": "contracts/lotteryContract.sol:51"
          },
          {
            "label": "lotteryWinners",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_struct(lotteryWinner)1934_storage)",
            "contract": "LotteryContract",
            "src": "contracts/lotteryContract.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Lottery)1945_storage)dyn_storage": {
            "label": "struct LotteryContract.Lottery[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(User)1927_storage)dyn_storage": {
            "label": "struct LotteryContract.User[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)903": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(User)1927_storage)": {
            "label": "mapping(address => struct LotteryContract.User)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(lotteryWinner)1934_storage)": {
            "label": "mapping(uint256 => struct LotteryContract.lotteryWinner)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Lottery)1945_storage": {
            "label": "struct LotteryContract.Lottery",
            "members": [
              {
                "label": "lotteryId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lotteryName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "statusCode",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "date",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(User)1927_storage": {
            "label": "struct LotteryContract.User",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "walletAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "email",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "disabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(lotteryWinner)1934_storage": {
            "label": "struct LotteryContract.lotteryWinner",
            "members": [
              {
                "label": "first",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "second",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "third",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
